0001_00_00100_00000
0000000000001100 // LDA r4, #12
0001_00_00011_00000
0000000000000001 // LDA r3, #1
0001_00_00101_00000
0000000000000001 // LDA r5, #1
0101_00_00101_00100
0000000000000000 // CMP r5, r4
0110_110_000000000
0000000000000100 // JGE 0x4
0011_00_00010_00101
0000000000000000 // MOV r2, r5
0111_000000000000
0000000000010100 // CLL 0x14
0010_01_00001_00000
1111111111111110 // STA r1, 0xfffe
0100_00_00101_00011
00101_0000000_0001 // ADD r5, r3, r5
0110_000_000000000
0000000000000110 // JMP 0x6
1010_00_00011_00000
0000000000000000 // PUSH r3
1010_00_00100_00000
0000000000000000 // PUSH r4
1010_00_00101_00000
0000000000000000 // PUSH r5
1010_00_00110_00000
0000000000000000 // PUSH r6
0001_00_00011_00000
0000000000000010 // LDA r3, #2
0001_00_00100_00000
0000000000000001 // LDA r4, #1
0101_00_00010_00011
0000000000000000 // CMP r2, r3
1001_100_000000000
0000000000010000 // BLE +16
0011_00_00110_00010
0000000000000000 // MOV r6, r2
0100_00_00110_00100
00010_0000000_0010 // SUB r6, r4, r2
0111_000000000000
0000000000010100 // CLL 0x14
0011_00_00101_00001
0000000000000000 // MOV r5, r1
0100_00_00110_00011
00010_0000000_0010 // SUB r6, r3, r2
0111_000000000000
0000000000010100 // CLL 0x14
0100_00_00001_00101
00001_0000000_0001 // ADD r1, r5, r1
1001_000_000000000
0000000000000010 // BRN +2
0011_00_00001_00100
0000000000000000 // MOV r1, r4
1011_00_00110_00000
0000000000000000 // POP r6
1011_00_00101_00000
0000000000000000 // POP r5
1011_00_00100_00000
0000000000000000 // POP r4
1011_00_00011_00000
0000000000000000 // POP r3
1000_000000000000
0000000000000000 // RET